#! /bin/sh /usr/share/dpatch/dpatch-run
## rationalise-linux-swap.dpatch by Colin Watson <cjwatson@ubuntu.com>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Rationalise linux-swap fs names, and add a "linux-swap" alias.
## DP: Backport of 2882b5300103238f8d71bdf6d0c1f54c4c59646d from upstream.

@DPATCH@
diff -urNad parted-1.8.8.git.2009.06.03~/NEWS parted-1.8.8.git.2009.06.03/NEWS
--- parted-1.8.8.git.2009.06.03~/NEWS	2009-06-03 22:59:52.000000000 +0100
+++ parted-1.8.8.git.2009.06.03/NEWS	2009-10-05 10:42:55.000000000 +0100
@@ -2,6 +2,13 @@
 
 * Noteworthy changes in release 1.9.0 (????-??-??) [stable]
 
+libparted:
+* The linux-swap "filesystem" types are now called "linux-swap(v0)" and
+  "linux-swap(v1)" rather than "linux-swap(old)" and "linux-swap(new)"
+  as in parted 1.8, or "linux-swap" as in older versions; "old" and
+  "new" generally make poor names, and v1 is the only format supported
+  by current Linux kernels. Aliases for all previous names are
+  available.
 
 * Noteworthy changes in release 1.8.8.1 (2007-12-17) [stable]
 
diff -urNad parted-1.8.8.git.2009.06.03~/include/parted/filesys.h parted-1.8.8.git.2009.06.03/include/parted/filesys.h
--- parted-1.8.8.git.2009.06.03~/include/parted/filesys.h	2009-06-03 22:59:52.000000000 +0100
+++ parted-1.8.8.git.2009.06.03/include/parted/filesys.h	2009-10-05 10:42:55.000000000 +0100
@@ -28,6 +28,7 @@
 
 typedef struct _PedFileSystem		PedFileSystem;
 typedef struct _PedFileSystemType	PedFileSystemType;
+typedef struct _PedFileSystemAlias	PedFileSystemAlias;
 typedef const struct _PedFileSystemOps	PedFileSystemOps;
 
 #include <parted/geom.h>
@@ -62,6 +63,18 @@
 	PedFileSystemOps* const	ops;
 };
 
+/**
+ * Structure describing a file system alias. This is separate from
+ * PedFileSystemType because probing only looks through the list of types,
+ * and does not probe aliases separately.
+ */
+struct _PedFileSystemAlias {
+	PedFileSystemAlias*	next;
+	PedFileSystemType*	fs_type;
+	const char*		alias;
+	int			deprecated;
+};
+
 
 /**
  * Structure describing file system
@@ -79,10 +92,18 @@
 extern void ped_file_system_type_register (PedFileSystemType* type);
 extern void ped_file_system_type_unregister (PedFileSystemType* type);
 
+extern void ped_file_system_alias_register (PedFileSystemType* type,
+					    const char* alias, int deprecated);
+extern void ped_file_system_alias_unregister (PedFileSystemType* type,
+					      const char* alias);
+
 extern PedFileSystemType* ped_file_system_type_get (const char* name);
 extern PedFileSystemType*
 ped_file_system_type_get_next (const PedFileSystemType* fs_type);
 
+extern PedFileSystemAlias*
+ped_file_system_alias_get_next (const PedFileSystemAlias* fs_alias);
+
 extern PedFileSystemType* ped_file_system_probe (PedGeometry* geom);
 extern PedGeometry* ped_file_system_probe_specific (
 			const PedFileSystemType* fs_type,
diff -urNad parted-1.8.8.git.2009.06.03~/libparted/filesys.c parted-1.8.8.git.2009.06.03/libparted/filesys.c
--- parted-1.8.8.git.2009.06.03~/libparted/filesys.c	2009-06-03 22:59:52.000000000 +0100
+++ parted-1.8.8.git.2009.06.03/libparted/filesys.c	2009-10-05 10:42:55.000000000 +0100
@@ -1,6 +1,6 @@
 /*
     libparted - a library for manipulating disk partitions
-    Copyright (C) 1999, 2000, 2001, 2007 Free Software Foundation, Inc.
+    Copyright (C) 1999, 2000, 2001, 2007, 2009 Free Software Foundation, Inc.
 
     This program is free software; you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
@@ -41,6 +41,7 @@
 #define BUFFER_SIZE	4096		/* in sectors */
 
 static PedFileSystemType*	fs_types = NULL;
+static PedFileSystemAlias*	fs_aliases = NULL;
 
 void
 ped_file_system_type_register (PedFileSystemType* fs_type)
@@ -72,6 +73,49 @@
 		fs_types = fs_type->next;
 }
 
+void
+ped_file_system_alias_register (PedFileSystemType* fs_type, const char* alias,
+				int deprecated)
+{
+	PedFileSystemAlias*	fs_alias;
+
+	PED_ASSERT (fs_type != NULL, return);
+	PED_ASSERT (alias != NULL, return);
+
+	fs_alias = ped_malloc (sizeof *fs_alias);
+	if (!fs_alias)
+		return;
+
+	fs_alias->next = fs_aliases;
+	fs_alias->fs_type = fs_type;
+	fs_alias->alias = alias;
+	fs_alias->deprecated = deprecated;
+	fs_aliases = fs_alias;
+}
+
+void
+ped_file_system_alias_unregister (PedFileSystemType* fs_type,
+				  const char* alias)
+{
+	PedFileSystemAlias*	walk;
+	PedFileSystemAlias*	last = NULL;
+
+	PED_ASSERT (fs_aliases != NULL, return);
+	PED_ASSERT (fs_type != NULL, return);
+	PED_ASSERT (alias != NULL, return);
+
+	for (walk = fs_aliases; walk; last = walk, walk = walk->next) {
+		if (walk->fs_type == fs_type && !strcmp (walk->alias, alias))
+			break;
+	}
+
+	PED_ASSERT (walk != NULL, return);
+	if (last)
+		last->next = walk->next;
+	else
+		fs_aliases = walk->next;
+}
+
 /**
  * Get a PedFileSystemType by its @p name.
  *
@@ -81,6 +125,7 @@
 ped_file_system_type_get (const char* name)
 {
 	PedFileSystemType*	walk;
+	PedFileSystemAlias*	alias_walk;
 
 	PED_ASSERT (name != NULL, return NULL);
 
@@ -88,7 +133,22 @@
 		if (!strcasecmp (walk->name, name))
 			break;
 	}
-	return walk;
+	if (walk != NULL)
+		return walk;
+
+	for (alias_walk = fs_aliases; alias_walk != NULL;
+	     alias_walk = alias_walk->next) {
+		if (!strcasecmp (alias_walk->alias, name))
+			break;
+	}
+	if (alias_walk != NULL) {
+		if (alias_walk->deprecated)
+			PED_DEBUG (0, "File system alias %s is deprecated",
+				   name);
+		return alias_walk->fs_type;
+	}
+
+	return NULL;
 }
 
 /**
@@ -106,6 +166,20 @@
 }
 
 /**
+ * Get the next PedFileSystemAlias after @p fs_alias.
+ *
+ * @return @c NULL if @p fs_alias is the last item in the list.
+ */
+PedFileSystemAlias*
+ped_file_system_alias_get_next (const PedFileSystemAlias* fs_alias)
+{
+	if (fs_alias)
+		return fs_alias->next;
+	else
+		return fs_aliases;
+}
+
+/**
  * Attempt to find a file system and return the region it occupies.
  *
  * @param fs_type The file system type to probe for.
diff -urNad parted-1.8.8.git.2009.06.03~/libparted/fs/linux_swap/linux_swap.c parted-1.8.8.git.2009.06.03/libparted/fs/linux_swap/linux_swap.c
--- parted-1.8.8.git.2009.06.03~/libparted/fs/linux_swap/linux_swap.c	2009-10-05 10:42:16.000000000 +0100
+++ parted-1.8.8.git.2009.06.03/libparted/fs/linux_swap/linux_swap.c	2009-10-05 10:42:55.000000000 +0100
@@ -69,12 +69,12 @@
 	unsigned int	max_bad_pages;
 } SwapSpecific;
 
+static PedFileSystemType _swap_v0_type;
 static PedFileSystemType _swap_v1_type;
-static PedFileSystemType _swap_v2_type;
 static PedFileSystemType _swap_swsusp_type;
 
+static PedFileSystem* _swap_v0_open (PedGeometry* geom);
 static PedFileSystem* _swap_v1_open (PedGeometry* geom);
-static PedFileSystem* _swap_v2_open (PedGeometry* geom);
 static PedFileSystem* _swap_swsusp_open (PedGeometry* geom);
 static int swap_close (PedFileSystem* fs);
 
@@ -89,11 +89,11 @@
         switch (kind) {
         /* Check for old style swap partitions. */
                 case 0:
-                        fs = _swap_v1_open(geom);
+                        fs = _swap_v0_open(geom);
                         break;
         /* Check for new style swap partitions. */
                 case 1:
-                        fs = _swap_v2_open(geom);
+                        fs = _swap_v1_open(geom);
                         break;
         /* Check for swap partitions containing swsusp data. */
                 case -1:
@@ -135,11 +135,11 @@
         switch (kind) {
         /* Check for old style swap partitions. */
                 case 0:
-                        fs = _swap_v1_open(geom);
+                        fs = _swap_v0_open(geom);
                         break;
         /* Check for new style swap partitions. */
                 case 1:
-                        fs = _swap_v2_open(geom);
+                        fs = _swap_v1_open(geom);
                         break;
         /* Check for swap partitions containing swsusp data. */
                 case -1:
@@ -215,7 +215,7 @@
 	fs->geom = ped_geometry_duplicate (geom);
 	if (!fs->geom)
 		goto error_free_buffer;
-	fs->type = &_swap_v2_type;
+	fs->type = &_swap_v1_type;
 	return fs;
 
 error_free_buffer:
@@ -244,7 +244,7 @@
 }
 
 static PedFileSystem*
-_swap_v1_open (PedGeometry* geom)
+_swap_v0_open (PedGeometry* geom)
 {
 	PedFileSystem*		fs;
 	SwapSpecific*		fs_info;
@@ -286,7 +286,7 @@
 }
 
 static PedFileSystem*
-_swap_v2_open (PedGeometry* geom)
+_swap_v1_open (PedGeometry* geom)
 {
 	PedFileSystem*		fs;
 	SwapSpecific*		fs_info;
@@ -562,7 +562,7 @@
 static PedFileSystem*
 swap_copy (const PedFileSystem* fs, PedGeometry* geom, PedTimer* timer)
 {
-	return ped_file_system_create (geom, &_swap_v2_type, timer);
+	return ped_file_system_create (geom, &_swap_v1_type, timer);
 }
 
 static int
@@ -599,12 +599,12 @@
 #endif /* !DISCOVER_ONLY */
 
 static PedGeometry*
-_swap_v1_probe (PedGeometry* geom) {
+_swap_v0_probe (PedGeometry* geom) {
         return _generic_swap_probe (geom, 0);
 }
 
 static PedGeometry*
-_swap_v2_probe (PedGeometry* geom) {
+_swap_v1_probe (PedGeometry* geom) {
         return _generic_swap_probe (geom, 1);
 }
 
@@ -614,12 +614,12 @@
 }
 
 static int
-_swap_v1_clobber (PedGeometry* geom) {
+_swap_v0_clobber (PedGeometry* geom) {
         return _generic_swap_clobber (geom, 0);
 }
 
 static int
-_swap_v2_clobber (PedGeometry* geom) {
+_swap_v1_clobber (PedGeometry* geom) {
         return _generic_swap_clobber (geom, 1);
 }
 
@@ -628,11 +628,11 @@
         return _generic_swap_clobber (geom, -1);
 }
 
-static PedFileSystemOps _swap_v1_ops = {
-	probe:		_swap_v1_probe,
+static PedFileSystemOps _swap_v0_ops = {
+	probe:		_swap_v0_probe,
 #ifndef DISCOVER_ONLY
-	clobber:	_swap_v1_clobber,
-	open:		_swap_v1_open,
+	clobber:	_swap_v0_clobber,
+	open:		_swap_v0_open,
 	create:		swap_create,
 	close:		swap_close,
 	check:		swap_check,
@@ -655,11 +655,11 @@
 #endif /* !DISCOVER_ONLY */
 };
 
-static PedFileSystemOps _swap_v2_ops = {
-	probe:		_swap_v2_probe,
+static PedFileSystemOps _swap_v1_ops = {
+	probe:		_swap_v1_probe,
 #ifndef DISCOVER_ONLY
-	clobber:	_swap_v2_clobber,
-	open:		_swap_v2_open,
+	clobber:	_swap_v1_clobber,
+	open:		_swap_v1_open,
 	create:		swap_create,
 	close:		swap_close,
 	check:		swap_check,
@@ -709,17 +709,17 @@
 #endif /* !DISCOVER_ONLY */
 };
 
-static PedFileSystemType _swap_v1_type = {
+static PedFileSystemType _swap_v0_type = {
 	next:	NULL,
-	ops:	&_swap_v1_ops,
-	name:	"linux-swap(old)",
+	ops:	&_swap_v0_ops,
+	name:	"linux-swap(v0)",
 	block_sizes: LINUXSWAP_BLOCK_SIZES
 };
 
-static PedFileSystemType _swap_v2_type = {
+static PedFileSystemType _swap_v1_type = {
 	next:	NULL,
-	ops:	&_swap_v2_ops,
-	name:	"linux-swap(new)",
+	ops:	&_swap_v1_ops,
+	name:	"linux-swap(v1)",
 	block_sizes: LINUXSWAP_BLOCK_SIZES
 };
 
@@ -733,15 +733,23 @@
 void
 ped_file_system_linux_swap_init ()
 {
+	ped_file_system_type_register (&_swap_v0_type);
 	ped_file_system_type_register (&_swap_v1_type);
-	ped_file_system_type_register (&_swap_v2_type);
 	ped_file_system_type_register (&_swap_swsusp_type);
+
+	ped_file_system_alias_register (&_swap_v0_type, "linux-swap(old)", 1);
+	ped_file_system_alias_register (&_swap_v1_type, "linux-swap(new)", 1);
+	ped_file_system_alias_register (&_swap_v1_type, "linux-swap", 0);
 }
 
 void
 ped_file_system_linux_swap_done ()
 {
+	ped_file_system_alias_unregister (&_swap_v0_type, "linux-swap(old)");
+	ped_file_system_alias_unregister (&_swap_v1_type, "linux-swap(new)");
+	ped_file_system_alias_unregister (&_swap_v1_type, "linux-swap");
+
+	ped_file_system_type_unregister (&_swap_v0_type);
 	ped_file_system_type_unregister (&_swap_v1_type);
-	ped_file_system_type_unregister (&_swap_v2_type);
 	ped_file_system_type_unregister (&_swap_swsusp_type);
 }
diff -urNad parted-1.8.8.git.2009.06.03~/libparted/labels/misc.h parted-1.8.8.git.2009.06.03/libparted/labels/misc.h
--- parted-1.8.8.git.2009.06.03~/libparted/labels/misc.h	2009-06-03 22:59:52.000000000 +0100
+++ parted-1.8.8.git.2009.06.03/libparted/labels/misc.h	2009-10-05 10:42:55.000000000 +0100
@@ -18,7 +18,7 @@
 
 /* Return nonzero if FS_TYPE_NAME starts with "linux-swap".
    This must match the NUL-terminated "linux-swap" as well
-   as "linux-swap(old)" and "linux-swap(new)".  */
+   as "linux-swap(v0)" and "linux-swap(v1)".  */
 static inline int
 is_linux_swap (char const *fs_type_name)
 {
diff -urNad parted-1.8.8.git.2009.06.03~/parted/parted.c parted-1.8.8.git.2009.06.03/parted/parted.c
--- parted-1.8.8.git.2009.06.03~/parted/parted.c	2009-06-03 22:59:52.000000000 +0100
+++ parted-1.8.8.git.2009.06.03/parted/parted.c	2009-10-05 10:42:55.000000000 +0100
@@ -1983,6 +1983,7 @@
         StrList*                list;
         int                     first;
         PedFileSystemType*      fs_type;
+        PedFileSystemAlias*     fs_alias;
         PedDiskType*            disk_type;
         PedPartitionFlag        part_flag;
         PedUnit                 unit;
@@ -2039,7 +2040,7 @@
         label_type_msg = str_list_convert (list);
         str_list_destroy (list);
 
-/* mkfs - file system types */
+/* mkfs - file system types and aliases */
         list = str_list_create (_(fs_type_msg_start), NULL);
 
         first = 1;
@@ -2054,12 +2055,23 @@
                         str_list_append (list, ", ");
                 str_list_append (list, fs_type->name);
         }
+        for (fs_alias = ped_file_system_alias_get_next (NULL);
+             fs_alias; fs_alias = ped_file_system_alias_get_next (fs_alias)) {
+                if (fs_alias->fs_type->ops->create == NULL)
+                        continue;
+
+                if (first)
+                        first = 0;
+                else
+                        str_list_append (list, ", ");
+                str_list_append (list, fs_alias->alias);
+        }
         str_list_append (list, "\n");
 
         mkfs_fs_type_msg = str_list_convert (list);
         str_list_destroy (list);
 
-/* mkpart - file system types */
+/* mkpart - file system types and aliases */
         list = str_list_create (_(fs_type_msg_start), NULL);
 
         first = 1;
@@ -2071,12 +2083,20 @@
                         str_list_append (list, ", ");
                 str_list_append (list, fs_type->name);
         }
+        for (fs_alias = ped_file_system_alias_get_next (NULL);
+             fs_alias; fs_alias = ped_file_system_alias_get_next (fs_alias)) {
+                if (first)
+                        first = 0;
+                else
+                        str_list_append (list, ", ");
+                str_list_append (list, fs_alias->alias);
+        }
         str_list_append (list, "\n");
 
         mkpart_fs_type_msg = str_list_convert (list);
         str_list_destroy (list);
 
-/* resize - file system types */
+/* resize - file system types and aliases */
         list = str_list_create (_(resize_msg_start), NULL);
 
         first = 1;
@@ -2091,6 +2111,17 @@
                         str_list_append (list, ", ");
                 str_list_append (list, fs_type->name);
         }
+        for (fs_alias = ped_file_system_alias_get_next (NULL);
+             fs_alias; fs_alias = ped_file_system_alias_get_next (fs_alias)) {
+                if (fs_alias->fs_type->ops->resize == NULL)
+                        continue;
+
+                if (first)
+                        first = 0;
+                else
+                        str_list_append (list, ", ");
+                str_list_append (list, fs_alias->alias);
+        }
         str_list_append (list, "\n");
 
         resize_fs_type_msg = str_list_convert (list);
diff -urNad parted-1.8.8.git.2009.06.03~/parted/ui.c parted-1.8.8.git.2009.06.03/parted/ui.c
--- parted-1.8.8.git.2009.06.03~/parted/ui.c	2009-06-03 22:59:52.000000000 +0100
+++ parted-1.8.8.git.2009.06.03/parted/ui.c	2009-10-05 10:42:55.000000000 +0100
@@ -1347,6 +1347,7 @@
 init_fs_type_str ()
 {
         PedFileSystemType*    walk;
+        PedFileSystemAlias*   alias_walk;
 
         fs_type_list = NULL;
 
@@ -1357,6 +1358,14 @@
                 if (!fs_type_list)
                         return 0;
         }
+        for (alias_walk = ped_file_system_alias_get_next (NULL); alias_walk;
+             alias_walk = ped_file_system_alias_get_next (alias_walk))
+        {
+                fs_type_list = str_list_insert (fs_type_list,
+                                                alias_walk->alias);
+                if (!fs_type_list)
+                        return 0;
+        }
 
         return 1;
 }
diff -urNad parted-1.8.8.git.2009.06.03~/tests/t2100-mkswap.sh parted-1.8.8.git.2009.06.03/tests/t2100-mkswap.sh
--- parted-1.8.8.git.2009.06.03~/tests/t2100-mkswap.sh	2009-06-03 22:59:52.000000000 +0100
+++ parted-1.8.8.git.2009.06.03/tests/t2100-mkswap.sh	2009-10-05 10:42:55.000000000 +0100
@@ -21,7 +21,7 @@
 . $srcdir/test-lib.sh
 
 ######################################################################
-# When creating a partition of type linux-swap(new) in a DOS partition
+# When creating a partition of type linux-swap(v1) in a DOS partition
 # table, ensure that the proper file system type (0x82) is used.
 # Some releases, e.g. parted-1.8.8 would mistakenly use 0x83.
 ######################################################################
@@ -43,7 +43,7 @@
 
 test_expect_success \
     'create a linux-swap file system' \
-    'parted -s $dev mkfs 1 "linux-swap(new)" > out 2>&1'
+    'parted -s $dev mkfs 1 "linux-swap(v1)" > out 2>&1'
 test_expect_success 'expect no output' 'compare out /dev/null'
 
 # Extract the byte at offset 451.  It must be 0x82, not 0x83.
@@ -52,4 +52,9 @@
     'od -t x1 -An -j450 -N1 $dev > out && echo " 82" > exp'
 test_expect_success 'expect it to be 82, not 83' 'compare out exp'
 
+test_expect_success \
+    'create a linux-swap file system via alias' \
+    'parted -s $dev mkfs 1 linux-swap > out 2>&1'
+test_expect_success 'expect no output' 'compare out /dev/null'
+
 test_done
