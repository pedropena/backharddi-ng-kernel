
WARNING: THE PROGRAMS IN THIS SUITE DO *NOT* SUPPORT SHADOW PASSWORD FILES!
	 UNLESS YOU USE PAM.

WARNING: THIS COLLECTION CONFLICTS WITH SYSTEM V INITTAB.
         UNLESS YOU CONFIGURE IT NOT TO.

WARNING: USE GNU TAR -- OTHER TARS WILL FAIL SILENTLY!

WARNING: DO *NOT* INSTALL WITHOUT THINKING.

WARNING: The simpleinit and some other programs in this package are
	 *NOT* System V compliant.  These utilities are meant to be
	 used by people who build their own systems.  If you are not
         a wizard, do *NOT* blindly install these utilities: they could
         prevent you from logging into your system.  Have a boot floppy
         ready, especially if you don't know what you are doing.  It's a
	 great way to learn though ;-)


To install from source:

1) Get source distribution (see the .lsm file for locations)
2) Untar util-linux-2.11X.tar.gz somewhere
3) cd util-linux-2.11X
4) Edit MCONFIG
5) ./configure
6) Look at defines.h and make_include, and edit if necessary
7) make
8) make install
9) If you want to use simpleinit and agetty, then make softlinks from
   /sbin/init to simpleinit and from /sbin/getty to agetty, but make sure
   that your /etc/inittab is set up right (this is *NOT* the System V
   compatible init!), or you will be hosed.  If you are using the SysV
   init and/or some other getty, they you can keep using those.

People ask: I want to link statically and install in /foo. How?
Answer: Try the following:
	LDFLAGS="-static"
	DESTDIR=/foo
	export LDFLAGS DESTDIR
	./configure
	make
	make install

If you have compilation problems: tell util-linux@math.uio.no about it.

Compilation will fail on a minix filesystem with 14-byte filenames
since for example mount_guess_fstype.h, mount_guess_fstype.c and
mount_guess_fstype.o will be the same file. (However, 30 bytes suffice.)

A glibc header bug causes
  /usr/include/bits/string2.h:419: warning: pointer of type `void *'
    used in arithmetic
This is harmless.

Users of libc5 may get warnings like
  /usr/include/linux/byteorder/swab.h:100: warning: no previous prototype for `__fswab16'
that they'll have to ignore. The Linux kernel includes are not meant to be
included in user programs, but libc5 does precisely that and is inherently
broken.

Several old libc have complaints like
  /usr/include/sys/syslog.h:71: warning: missing braces around initializer
  /usr/include/sys/syslog.h:87: warning: aggregate has a partly bracketed initializer
  /usr/include/rpc/xdr.h:103: warning: function declaration isn't a prototype
  /usr/include/rpc/auth.h:86: warning: function declaration isn't a prototype
  /usr/include/rpc/svc.h:79: warning: function declaration isn't a prototype
Also this is a libc/include problem.

Warnings like
  <sys/mman.h>:11: warning: `MAP_FILE' redefined
  <asm/mman.h>:30: warning: this is the location of the previous definition
are caused by the libc/kernel combination.

Warnings like
  setterm.c:805: warning: passing arg 1 of `tigetstr' discards qualifiers
    from pointer target type
  login.c:979: warning: passing arg 1 of `putenv' discards qualifiers
    from pointer target type
are caused by bad ncurses or glibc header files.

Warnings like
  script.c: In function `dooutput':
  script.c:254: warning: `%c' yields only last 2 digits of year in some locales
are caused by a broken gcc that warns about things that are not wrong,
where the warning is not easily avoided.

All such warnings are harmless.
There should be no compilation errors.


If you have runtime problems:

- with non-ASCII characters: perhaps you forgot to set LC_CTYPE or LC_ALL?
  (For example, in Norway one can say  LC_ALL=no_NO; export LC_ALL  and
   then various utilities will treat Scandinavian non-ASCII letters as
   letters.)

otherwise: tell util-linux@math.uio.no about it.

