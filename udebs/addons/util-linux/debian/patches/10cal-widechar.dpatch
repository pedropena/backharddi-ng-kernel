#! /bin/sh /usr/share/dpatch/dpatch-run
## 10cal-widechar.dpatch by LaMont Jones <lamont@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Patch for wide-character support in cal.

@DPATCH@
diff -urNad util-linux/misc-utils/cal.c /tmp/dpep.GnsIaa/util-linux/misc-utils/cal.c
--- util-linux/misc-utils/cal.c	2004-12-05 12:20:36.000000000 -0700
+++ /tmp/dpep.GnsIaa/util-linux/misc-utils/cal.c	2004-12-15 07:13:17.529049196 -0700
@@ -367,8 +367,9 @@
 {
   int i, wd;
 #ifdef ENABLE_WIDECHAR
+  int j;
   wchar_t day_headings_wc[22],j_day_headings_wc[29];
-  wchar_t wd_wc[10];
+  wchar_t wd_wc[10], tmp_wd_wc[10];
 #endif
 
   strcpy(day_headings,"");
@@ -387,15 +388,32 @@
   for(i = 0 ; i < 7 ; i++ ) {
      wd = (i + week1stday) % 7;
 #ifdef ENABLE_WIDECHAR
-     mbstowcs(wd_wc,weekday(wd),10);
-     if (wcswidth(wd_wc,10) < 3)
-	     wcscat(j_day_headings_wc,L" ");
-     if (wcswidth(wd_wc,10) < 2) {
-	     wcscat(day_headings_wc, L" ");
-	     wcscat(j_day_headings_wc, L" ");
+     mbstowcs(tmp_wd_wc,weekday(wd),10);
+
+     wmemset(wd_wc, L'\0', 10);
+     for (j = 0; j < wcslen(tmp_wd_wc); j++) {
+	 wd_wc[j] = tmp_wd_wc[j];
+	 if (wcswidth(wd_wc,10) > 2) {
+	     wd_wc[j] = L'\0';
+	     break;
+	 }
      }
-     wcsncat(day_headings_wc,wd_wc,2);
-     wcsncat(j_day_headings_wc,wd_wc,3);
+     for (j = wcswidth(wd_wc,10); j < 2; j++)
+       wcscat(day_headings_wc,L" ");
+     wcscat(day_headings_wc,wd_wc);
+
+     wmemset(wd_wc, L'\0', 10);
+     for (j = 0; j < wcslen(tmp_wd_wc); j++) {
+	 wd_wc[j] = tmp_wd_wc[j];
+	 if (wcswidth(wd_wc,10) > 3) {
+	     wd_wc[j] = L'\0';
+	     break;
+	 }
+     }
+     for (j = wcswidth(wd_wc,10); j < 3; j++)
+       wcscat(j_day_headings_wc,L" ");
+     wcscat(j_day_headings_wc,wd_wc);
+	
      wcscat(day_headings_wc, L" ");
      wcscat(j_day_headings_wc, L" ");
 #else
@@ -426,6 +444,10 @@
 do_monthly(int day, int month, int year, struct fmt_st *out) {
 	int col, row, len, days[MAXDAYS];
 	char *p, lineout[FMT_ST_CHARS];
+#ifdef ENABLE_WIDECHAR
+	wchar_t lineout_wc[FMT_ST_CHARS];
+	size_t wcs_len;
+#endif
 	int width = (julian ? J_WEEK_LEN : WEEK_LEN) - 1;
 
 	day_array(day, month, year, days);
@@ -437,9 +459,17 @@
 	 * the Vietnamese should be "%s na(m %d", etc.
 	 */
 	len = sprintf(lineout, _("%s %d"), full_month[month - 1], year);
+#ifdef ENABLE_WIDECHAR
+	wcs_len = mbstowcs(lineout_wc,lineout,len);
+	if (wcs_len != (size_t)-1 && wcs_len != 0) {
+          len = wcswidth(lineout_wc,wcs_len);
+        } else {
+          len = strlen(lineout);
+        }
+#endif
 	center_str(lineout, out->s[0], SIZE(out->s[0]), width);
 
-	sprintf(out->s[1],"%s",
+	(void)sprintf(out->s[1],"%s",
 		julian ? j_day_headings : day_headings);
 	for (row = 0; row < 6; row++) {
 		for (col = 0, p = lineout; col < 7; col++)
@@ -767,6 +797,20 @@
 	int separate;
 {
 	char lineout[FMT_ST_CHARS];
+#ifdef ENABLE_WIDECHAR
+	wchar_t str_wc[FMT_ST_CHARS];
+	size_t str_len, wcs_len;
+
+	wcs_len = mbstowcs (str_wc,str,FMT_ST_CHARS);
+	if (wcs_len != (size_t)-1 && wcs_len != 0) {
+           str_len = wcswidth(str_wc,wcs_len);
+        } else {
+           str_len = strlen(str);
+        } 
+	len -= str_len;
+#else
+	len -= strlen(str);
+#endif
 	center_str(str, lineout, SIZE(lineout), len);
 	fputs(lineout, stdout);
 	if (separate)
