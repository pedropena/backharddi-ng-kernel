********************
* libntfs-gnomevfs *
********************

- be generic filter: provide ntfs_device_operations from parent GnomeVFSHandle


***********
* libntfs *
***********

*****************
* HIGH priority *
*****************

- complete ntfs_index_{add_filename,rm}

- move ntfsdecrypt to library.

- complete the implementation of ntfs_attr_truncate() (for compressed files)

- add write of compressed attributes

- detect presence of usnjrnl and if present and mounting rw, re-stamp it (see
  current ntfs driver for example in 2.6.15 kernel)

- fix support for large sector sizes by changing the logical device block size
  to the sector size in the ntfs volume (it ought to work without doing this as
  we do byte-aligned i/o anyway) but it would be good to change in case a
  previous mount left the block size to larger value and we expect 512 bytes as
  that would be incredibly inefficient

*******************
* MEDIUM priority *
*******************

- create API reference book template (cf. linux kernel)
- enable automatic creation of API reference

- ntfs_index_add_filename to more generic ntfs_index_add

- write API for conventional high level file access.

- implement loads of utilities a-la ntfsrm, ntfsmkdir, etc...

- implement an ntfs shell where can use the above much faster with caching,
  probably extending the library in the process

****************
* LOW priority *
****************

- Do we attach attributes (ntfs_attr) to the corresponding ntfs_inode?  Now we
  just atach the inode to the attribute and expect the user to not shoot
  themselves in the foot.

- add ACL read/write support to library

- add MS BackupAPI to library

- add volume resizing support to library

- add defrag API to library

- write utilities for all of the above
