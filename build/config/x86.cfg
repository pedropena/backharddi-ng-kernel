# Common configuration and targets for i386 and amd64 systems.

# May be needed in rare cases.
#SYSLINUX_OPTS = -s

# The DOS volume id to use for DOS floppies. This is a 32 bit hexadecimal
# number.
DOS_VOLUME_ID = deb00001
# The DOS volume label to use for DOS floppies. This is a 11 character
# string.
DOS_VOLUME_LABEL = "Debian Inst"

# The image to use for a syslinux splash screen.
#SPLASH_RLE=boot/x86/pics/nicholson.rle
#SPLASH_RLE=boot/x86/pics/yazici.rle
SPLASH_RLE=boot/x86/pics/klowner.rle
#SPLASH_RLE=boot/x86/pics/polverini_b.rle

# The directory boot screens for syslinux will go in.
BOOT_SCREEN_DIR = 

# Compress binaries to save more space.
# Doesn't really save much since we gzip the image later though.
.PHONY: arch_tree
arch_tree:
ifdef UPX
	for bin in $(UPX_BINS); do \
		$(UPX) -9 $(TREE)/$$bin; \
	done
endif

# Create a bootable image.
.PHONY: arch_boot
arch_boot:
ifdef UPX
	$(UPX) -9 $(TEMP_KERNEL) || true
endif
	mkfs.msdos -i $(DOS_VOLUME_ID) -n $(DOS_VOLUME_LABEL) -C $(TEMP_BOOT) $(FLOPPY_SIZE)
	
	# syslinux is used to make the image bootable
	syslinux $(SYSLINUX_OPTS) $(TEMP_BOOT)

	mcopy -i$(TEMP_BOOT) $(TEMP_KERNEL) ::linux
	mcopy -i$(TEMP_BOOT) $(TEMP_INITRD) ::initrd.gz
	
	if [ -n "$(INITRD_GTK)" ]; then \
		mcopy -i$(TEMP_BOOT) $(INITRD_GTK) ::initrdg.gz; \
	fi

	# generate a disk label
	makelabel $(DISK_LABEL) $(BUILD_DATE) > $(TEMP)/disk.lbl
	mcopy -i$(TEMP_BOOT) $(TEMP)/disk.lbl ::disk.lbl

	# syslinux.cfg
	if [ -n "$(INITRD_GTK)" ]; then \
		cat boot/x86/syslinux.cfg.withgtk; \
	else \
		cat boot/x86/syslinux.cfg; \
	fi \
	| bootscreen-subst MEDIA_TYPE "$(MEDIA_TYPE)" \
		DEBIAN_VERSION "$(DEBIAN_VERSION)" \
		BUILD_DATE "$(BUILD_DATE)" \
		KERNEL linux INITRD initrd.gz \
		KERNEL_26 linux26 INITRD_26 initrd26.gz \
		INITRD_GTK initrdg.gz \
		VIDEO_MODE $(VIDEO_MODE) \
		VIDEO_MODE_GTK $(VIDEO_MODE_GTK) \
	| todos | mcopy -i$(TEMP_BOOT) - ::syslinux.cfg

	# syslinux help screens
	set -e; \
	$(foreach file,$(wildcard $(TEMP_BOOT_SCREENS)/*.txt), \
		if [ -e $(file).withgtk ] && [ -n "$(INITRD_GTK)" ]; then \
			mcopy -i$(TEMP_BOOT) $(file).withgtk ::`basename $(file)`; \
		else \
			mcopy -i$(TEMP_BOOT) $(file) ::`basename $(file)`; \
		fi; \
	)
	
	if [ -e $(TEMP_BOOT_SCREENS)/splash.rle ]; then \
		mcopy -i$(TEMP_BOOT) $(TEMP_BOOT_SCREENS)/splash.rle ::splash.rle; \
	fi || echo "*** Failed to add boot logo, probably out of space." >&2

	$(if $(GZIPPED),gzip -v9f $(TEMP_BOOT))

# Create a non-bootable image.
.PHONY: arch_root
arch_root:
	# generate a disk label
	makelabel $(DISK_LABEL) $(BUILD_DATE) > $(TEMP)/disk.lbl

	# Create fat image (no longer used)
	#mkfs.msdos -i $(DOS_VOLUME_ID) -n $(DOS_VOLUME_LABEL) -C $(TEMP_ROOT) $(FLOPPY_SIZE); \
	#mcopy -i$(TEMP_ROOT) $(TEMP_INITRD) ::initrd.gz; \
	#mcopy -i$(TEMP_ROOT) $(TEMP)/disk.lbl ::disk.lbl; \

	# Create ext2 image
	mkdir $(TEMP)/tmp; \
	cp $(TEMP_INITRD) $(TEMP)/disk.lbl $(TEMP)/tmp; \
	genext2fs -d $(TEMP)/tmp -b $(IMAGE_SIZE) -r 0 $(TEMP_ROOT); \
	rm -rf $(TEMP)/tmp; \

	$(if $(GZIPPED),gzip -v9f $(TEMP_ROOT))

# Set up syslinux/isolinux help screens.
.PHONY: arch_boot_screens
arch_boot_screens:
	-rm -f $(TEMP_BOOT_SCREENS)/*
	mkdir -p $(TEMP_BOOT_SCREENS)
	$(foreach SCREEN,$(wildcard boot/x86/*.txt boot/x86/*.txt.with*), \
		bootscreen-subst MEDIA_TYPE "$(MEDIA_TYPE)" \
			DEBIAN_VERSION "$(DEBIAN_VERSION)" \
			BUILD_DATE "$(BUILD_DATE)" \
			SYSDIR "$(BOOT_SCREEN_DIR)" \
		       < $(SCREEN) > $(TEMP_BOOT_SCREENS)/`basename $(SCREEN)`\
	;)
	if [ -n "$(SPLASH_RLE)" ]; then \
		cp $(SPLASH_RLE) $(TEMP_BOOT_SCREENS)/splash.rle; \
	fi

# isolinux CD info directory, including help screens and an isolinux.cfg.
# Note that the paths in the isolinux.cfg must match the paths used on the
# CD by debian-cd.
.PHONY: arch_cd_info_dir
arch_cd_info_dir:
	-rm -f $(TEMP_CD_INFO_DIR)/*
	mkdir -p $(TEMP_CD_INFO_DIR)
	
	cp -a $(TEMP_BOOT_SCREENS)/* $(TEMP_CD_INFO_DIR)

	cat boot/x86/syslinux.cfg \
	| bootscreen-subst MEDIA_TYPE "$(MEDIA_TYPE)" \
		DEBIAN_VERSION "$(DEBIAN_VERSION)" \
		BUILD_DATE "$(BUILD_DATE)" \
		KERNEL /install/vmlinuz INITRD /install/initrd.gz \
		VIDEO_MODE $(VIDEO_MODE) \
	> $(TEMP_CD_INFO_DIR)/isolinux.cfg

	if [ -n "$(INITRD_GTK)" ]; then \
		cat boot/x86/syslinux.cfg.withgtk \
		| bootscreen-subst MEDIA_TYPE "$(MEDIA_TYPE)" \
			DEBIAN_VERSION "$(DEBIAN_VERSION)" \
			BUILD_DATE "$(BUILD_DATE)" \
			KERNEL /install/vmlinuz INITRD /install/initrd.gz \
			INITRD_GTK /install/gtk/initrd.gz \
			VIDEO_MODE $(VIDEO_MODE) \
			VIDEO_MODE_GTK $(VIDEO_MODE_GTK) \
		> $(TEMP_CD_INFO_DIR)/isolinux.cfg.withgtk; \
	fi

.PHONY: arch_miniiso
arch_miniiso:
	-rm -f $(TEMP_CD_TREE)/*
	mkdir -p $(TEMP_CD_TREE)
	cp /usr/lib/syslinux/isolinux.bin $(TEMP_CD_TREE)
	$(foreach file,$(wildcard boot/x86/*.txt), \
		cat $(file) | \
		bootscreen-subst MEDIA_TYPE "$(MEDIA_TYPE)" \
			DEBIAN_VERSION "$(DEBIAN_VERSION)" \
			BUILD_DATE "$(BUILD_DATE)" "" \
		       > $(TEMP_CD_TREE)/`basename $(file)` \
	;)
	set -e; \
	$(foreach file,$(wildcard $(TEMP_BOOT_SCREENS)/*.txt), \
	)
	if [ -e $(TEMP_BOOT_SCREENS)/splash.rle ]; then \
		cp $(TEMP_BOOT_SCREENS)/splash.rle $(TEMP_CD_TREE); \
	fi
	ln -f $(TEMP_KERNEL) $(TEMP_CD_TREE)/linux
	ln -f $(TEMP_INITRD) $(TEMP_CD_TREE)/initrd.gz
	cat boot/x86/syslinux.cfg \
	| bootscreen-subst MEDIA_TYPE "$(MEDIA_TYPE)" \
		DEBIAN_VERSION "$(DEBIAN_VERSION)" \
		BUILD_DATE "$(BUILD_DATE)" \
		KERNEL linux INITRD initrd.gz \
		VIDEO_MODE $(VIDEO_MODE) \
	| todos > $(TEMP_CD_TREE)/isolinux.cfg
	ln -f $(TEMP_INITRD) $(TEMP_CD_TREE)/initrd.gz
	
	mkisofs -r -J -b isolinux.bin -c boot.cat \
		-no-emul-boot -boot-load-size 4 -boot-info-table \
		-o $(TEMP_MINIISO) $(TEMP_CD_TREE)

# Netboot images, including a small iso with the netboot stuff on it.
.PHONY: arch_netboot_dir
arch_netboot_dir:
	-rm -f $(TEMP_NETBOOT_DIR)
	mkdir -p $(TEMP_NETBOOT_DIR)/$(NETBOOT_PATH)
	cp $(TEMP_INITRD) $(TEMP_NETBOOT_DIR)/$(NETBOOT_PATH)
	cp $(TEMP_KERNEL) $(TEMP_NETBOOT_DIR)/$(NETBOOT_PATH)/linux

	cp /usr/lib/syslinux/pxelinux.0 $(TEMP_NETBOOT_DIR)/$(NETBOOT_PATH)
	mkdir -p $(TEMP_NETBOOT_DIR)/$(NETBOOT_PATH)/pxelinux.cfg
	cat boot/x86/syslinux.cfg \
	| bootscreen-subst MEDIA_TYPE "$(MEDIA_TYPE)" \
		DEBIAN_VERSION "$(DEBIAN_VERSION)" \
		BUILD_DATE "$(BUILD_DATE)" \
		SYSDIR "$(BOOT_SCREEN_DIR)" \
		KERNEL debian-installer/$(ARCH)/linux \
		INITRD debian-installer/$(ARCH)/initrd.gz \
		VIDEO_MODE $(VIDEO_MODE) \
	> $(TEMP_NETBOOT_DIR)/$(NETBOOT_PATH)/pxelinux.cfg/default
	
	mkdir -p $(TEMP_NETBOOT_DIR)/$(NETBOOT_PATH)/pxelinux.cfg.serial-9600
	cat boot/x86/syslinux.cfg \
	| bootscreen-subst MEDIA_TYPE "$(MEDIA_TYPE)" \
		DEBIAN_VERSION "$(DEBIAN_VERSION)" \
		BUILD_DATE "$(BUILD_DATE)" \
		SYSDIR "$(BOOT_SCREEN_DIR)" \
		KERNEL debian-installer/$(ARCH)/linux \
		INITRD debian-installer/$(ARCH)/initrd.gz \
		CONSOLE "console=ttyS0,9600n8" SYSLINUX_SERIAL \
		"SERIAL 0 9600 0" \
		VIDEO_MODE $(VIDEO_MODE) \
	> $(TEMP_NETBOOT_DIR)/$(NETBOOT_PATH)/pxelinux.cfg.serial-9600/default
	
	# This symlink is required as pxelinux always looks in the root
	# of the tftp server for its config.
	rm -f $(TEMP_NETBOOT_DIR)/pxelinux.cfg
	ln -sf $(NETBOOT_PATH)/pxelinux.cfg $(TEMP_NETBOOT_DIR)/pxelinux.cfg
	# This symlink is not strictly required, but it allows more usual
	# dhcp server setups to work without modification.
	rm -f $(TEMP_NETBOOT_DIR)/pxelinux.0
	ln -sf $(NETBOOT_PATH)/pxelinux.0 $(TEMP_NETBOOT_DIR)/pxelinux.0

	mkdir -p $(TEMP_NETBOOT_DIR)/$(BOOT_SCREEN_DIR)
	set -e; \
	$(foreach file,$(wildcard $(TEMP_BOOT_SCREENS)/*.txt), \
		cp $(file) $(TEMP_NETBOOT_DIR)/$(BOOT_SCREEN_DIR); \
	)

	if [ -n "$(SPLASH_RLE)" ]; then \
		cp $(SPLASH_RLE) $(TEMP_NETBOOT_DIR)/$(BOOT_SCREEN_DIR)/splash.rle; \
	fi

# This code creates a compatability symlink in gtk-miniiso. This is only
# included to avoid needing to change pointers to the mini.iso before etch,
# and should be removed and docs updated to point the the new location
# after.
gtk-miniiso:
	rm -rf $(BASE_DEST)/gtk-miniiso
	mkdir -p $(BASE_DEST)/gtk-miniiso
	ln -s ../netboot/gtk/mini.iso $(BASE_DEST)/gtk-miniiso
